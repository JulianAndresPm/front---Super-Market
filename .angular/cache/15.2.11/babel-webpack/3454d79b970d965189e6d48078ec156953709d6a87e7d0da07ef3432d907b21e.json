{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/servicio/producto.service\";\nimport * as i3 from \"@angular/router\";\nexport class AggEditProductosComponent {\n  constructor(fm, _productoServicio, router, aRouter) {\n    this.fm = fm;\n    this._productoServicio = _productoServicio;\n    this.router = router;\n    this.aRouter = aRouter;\n    this.titulo = 'Agregar';\n    // Validaciones\n    this.form = this.fm.group({\n      nombre: ['', Validators.required],\n      descripcion: ['', Validators.required],\n      precio: ['', Validators.required],\n      stock: ['', Validators.required],\n      imagen: [null]\n    });\n    this.id = Number(this.aRouter.snapshot.paramMap.get('id'));\n  }\n  ngOnInit() {\n    if (this.id !== 0) {\n      this.titulo = 'Editar';\n      this.EditarProducto(this.id);\n    }\n  }\n  addProducto() {\n    if (this.form.invalid) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('nombre', this.form.get('nombre')?.value);\n    formData.append('descripcion', this.form.get('descripcion')?.value);\n    formData.append('precio', this.form.get('precio')?.value);\n    formData.append('stock', this.form.get('stock')?.value);\n    // Verificar si hay una imagen y agregarla a formData\n    const imagen = this.form.get('imagen')?.value;\n    if (imagen && imagen.length > 0) {\n      formData.append('imagen', imagen[0]); // Obtener el archivo\n    }\n    // Mostrar los datos en la consola\n    for (const pair of formData.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n    if (this.id !== 0) {\n      this._productoServicio.updateProducto(this.id, formData).subscribe(() => {\n        console.log('Producto fue actualizado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al actualizar producto', error);\n      });\n    } else {\n      this._productoServicio.createProducto(formData).subscribe(() => {\n        console.log('Producto agregado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al agregar producto', error);\n      });\n    }\n  }\n  // Editar Producto\n  EditarProducto(id) {\n    this._productoServicio.dataProducto(id).subscribe(data => {\n      this.form.setValue({\n        nombre: data.nombre,\n        descripcion: data.descripcion,\n        precio: data.precio,\n        stock: data.stock,\n        imagen: null // Limpiar el campo de imagen\n      });\n    });\n  }\n  static #_ = this.ɵfac = function AggEditProductosComponent_Factory(t) {\n    return new (t || AggEditProductosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AggEditProductosComponent,\n    selectors: [[\"app-agg-edit-productos\"]],\n    decls: 34,\n    vars: 3,\n    consts: [[1, \"\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [1, \"modal-body\"], [\"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"nombre\", 1, \"form-label\", \"mt-4\"], [\"formControlName\", \"nombre\", \"type\", \"text\", \"id\", \"nombre\", 1, \"form-control\"], [\"for\", \"descripcion\", 1, \"form-label\", \"mt-4\"], [\"formControlName\", \"descripcion\", \"type\", \"text\", \"id\", \"descripcion\", 1, \"form-control\"], [\"for\", \"precio\", 1, \"form-label\", \"mt-4\"], [\"formControlName\", \"precio\", \"type\", \"number\", \"id\", \"precio\", 1, \"form-control\"], [\"for\", \"stock\", 1, \"form-label\", \"mt-4\"], [\"formControlName\", \"stock\", \"type\", \"number\", \"id\", \"stock\", 1, \"form-control\"], [\"for\", \"imagen\", 1, \"form-label\", \"mt-4\"], [\"type\", \"file\", \"formControlName\", \"imagen\", \"id\", \"imagen\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"]],\n    template: function AggEditProductosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AggEditProductosComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.addProducto();\n        });\n        i0.ɵɵelementStart(8, \"fieldset\")(9, \"div\")(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Descripcion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Precio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\")(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Stock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\")(26, \"label\", 15);\n        i0.ɵɵtext(27, \"Imagen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 17)(30, \"button\", 18);\n        i0.ɵɵtext(31, \"Guardar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 19);\n        i0.ɵɵtext(33, \"Regresar\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.titulo, \" Producto\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","AggEditProductosComponent","constructor","fm","_productoServicio","router","aRouter","form","group","nombre","required","descripcion","precio","stock","imagen","id","Number","snapshot","paramMap","get","ngOnInit","titulo","EditarProducto","addProducto","invalid","formData","FormData","append","value","length","pair","entries","console","log","updateProducto","subscribe","navigate","error","createProducto","dataProducto","data","setValue","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\JULIAN\\Desktop\\Super market\\Super market\\front-end\\src\\app\\componentes\\agg-edit-productos\\agg-edit-productos.component.ts","C:\\Users\\JULIAN\\Desktop\\Super market\\Super market\\front-end\\src\\app\\componentes\\agg-edit-productos\\agg-edit-productos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Producto } from 'src/app/interfaces/producto';\nimport { ProductoService } from 'src/app/servicio/producto.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-agg-edit-productos',\n  templateUrl: './agg-edit-productos.component.html',\n  styleUrls: ['./agg-edit-productos.component.scss'],\n})\nexport class AggEditProductosComponent implements OnInit {\n  form: FormGroup;\n  id: number;\n  titulo: string = 'Agregar';\n\n  constructor(\n    private fm: FormBuilder,\n    private _productoServicio: ProductoService,\n    private router: Router,\n    private aRouter: ActivatedRoute\n  ) {\n    // Validaciones\n    this.form = this.fm.group({\n      nombre: ['', Validators.required],\n      descripcion: ['', Validators.required],\n      precio: ['', Validators.required],\n      stock: ['', Validators.required],\n      imagen: [null],\n    });\n\n    this.id = Number(this.aRouter.snapshot.paramMap.get('id'));\n  }\n\n  ngOnInit(): void {\n    if (this.id !== 0) {\n      this.titulo = 'Editar';\n      this.EditarProducto(this.id);\n    }\n  }\n\n  addProducto() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('nombre', this.form.get('nombre')?.value);\n    formData.append('descripcion', this.form.get('descripcion')?.value);\n    formData.append('precio', this.form.get('precio')?.value);\n    formData.append('stock', this.form.get('stock')?.value);\n\n    // Verificar si hay una imagen y agregarla a formData\n    const imagen = this.form.get('imagen')?.value;\n    if (imagen && imagen.length > 0) {\n      formData.append('imagen', imagen[0]);  // Obtener el archivo\n    }\n\n    // Mostrar los datos en la consola\n    for (const pair of formData.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n\n    if (this.id !== 0) {\n      this._productoServicio.updateProducto(this.id, formData).subscribe(() => {\n        console.log('Producto fue actualizado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al actualizar producto', error);\n      });\n    } else {\n      this._productoServicio.createProducto(formData).subscribe(() => {\n        console.log('Producto agregado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al agregar producto', error);\n      });\n    }\n  }\n\n  // Editar Producto\n  EditarProducto(id: number) {\n    this._productoServicio.dataProducto(id).subscribe((data: Producto) => {\n      this.form.setValue({\n        nombre: data.nombre,\n        descripcion: data.descripcion,\n        precio: data.precio,\n        stock: data.stock,\n        imagen: null // Limpiar el campo de imagen\n      });\n    });\n  }\n}\n","<div class=\"\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">{{titulo}} Producto</h5>\n        </div>\n        <div class=\"modal-body\">\n          <form [formGroup]=\"form\" (ngSubmit)=\"addProducto()\" enctype=\"multipart/form-data\">\n            <fieldset>\n              <div>\n                <label for=\"nombre\" class=\"form-label mt-4\">Nombre</label>\n                <input formControlName=\"nombre\" type=\"text\" class=\"form-control\" id=\"nombre\">\n              </div>\n              <div>\n                <label for=\"descripcion\" class=\"form-label mt-4\">Descripcion</label>\n                <input formControlName=\"descripcion\" type=\"text\" class=\"form-control\" id=\"descripcion\">\n              </div>\n              <div>\n                <label for=\"precio\" class=\"form-label mt-4\">Precio</label>\n                <input formControlName=\"precio\" type=\"number\" class=\"form-control\" id=\"precio\">\n              </div>\n              <div>\n                <label for=\"stock\" class=\"form-label mt-4\">Stock</label>\n                <input formControlName=\"stock\" type=\"number\" class=\"form-control\" id=\"stock\">\n              </div>\n              <div>\n                <label for=\"imagen\" class=\"form-label mt-4\">Imagen</label>\n                <input type=\"file\" formControlName=\"imagen\" class=\"form-control\" id=\"imagen\">\n              </div>\n            </fieldset>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-primary\">Guardar</button>\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Regresar</button>\n            </div>\n          </form>\n          \n        </div>\n      </div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
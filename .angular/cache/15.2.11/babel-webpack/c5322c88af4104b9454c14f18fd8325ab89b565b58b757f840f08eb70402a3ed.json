{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AggEditProductosComponent = class AggEditProductosComponent {\n  constructor(fm, _productoServicio, router, aRouter) {\n    this.fm = fm;\n    this._productoServicio = _productoServicio;\n    this.router = router;\n    this.aRouter = aRouter;\n    this.titulo = 'Agregar';\n    this.imagenPrevia = null;\n    // Validaciones\n    this.form = this.fm.group({\n      nombre: ['', Validators.required],\n      descripcion: ['', Validators.required],\n      precio: ['', Validators.required],\n      stock: ['', Validators.required],\n      imagen: [null]\n    });\n    this.id = Number(this.aRouter.snapshot.paramMap.get('id'));\n  }\n  ngOnInit() {\n    if (this.id !== 0) {\n      this.titulo = 'Editar';\n      this.EditarProducto(this.id);\n    }\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.imagenPrevia = e.target.result;\n      };\n      reader.readAsDataURL(file);\n      this.form.get('imagen')?.setValue(file);\n    }\n  }\n  addProducto() {\n    if (this.form.invalid) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('nombre', this.form.get('nombre')?.value);\n    formData.append('descripcion', this.form.get('descripcion')?.value);\n    formData.append('precio', this.form.get('precio')?.value);\n    formData.append('stock', this.form.get('stock')?.value);\n    // Capturar el archivo de la imagen correctamente\n    const inputElement = document.querySelector('input[type=\"file\"]');\n    const file = inputElement?.files?.[0]; // Accede al archivox\n    if (file) {\n      console.log('Nombre del archivo:', file.name);\n      console.log('Tamaño del archivo:', file.size);\n      console.log('Tipo de archivo:', file.type);\n      formData.append('imagen', file); // Añade el archivo al FormData\n    } else {\n      console.log(\"No se seleccionó ninguna imagen.\");\n    }\n    // // Mostrar los datos en la consola\n    // formData.forEach((value, key) => {\n    //   console.log(`${key}:`, value);\n    // });\n    if (this.id !== 0) {\n      this._productoServicio.updateProducto(this.id, formData).subscribe(() => {\n        console.log('Producto fue actualizado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al actualizar producto', error);\n      });\n    } else {\n      this._productoServicio.createProducto(formData).subscribe(() => {\n        console.log('Producto agregado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al agregar producto', error);\n      });\n    }\n  }\n  // Editar Producto\n  EditarProducto(id) {\n    this._productoServicio.dataProducto(id).subscribe(data => {\n      this.form.patchValue({\n        nombre: data.nombre,\n        descripcion: data.descripcion,\n        precio: data.precio,\n        stock: data.stock,\n        imagen: data.imagen // Limpiar el campo de imagen\n      });\n    });\n  }\n};\n\nAggEditProductosComponent = __decorate([Component({\n  selector: 'app-agg-edit-productos',\n  templateUrl: './agg-edit-productos.component.html',\n  styleUrls: ['./agg-edit-productos.component.scss']\n})], AggEditProductosComponent);\nexport { AggEditProductosComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","AggEditProductosComponent","constructor","fm","_productoServicio","router","aRouter","form","group","nombre","required","descripcion","precio","stock","imagen","id","Number","snapshot","paramMap","get","ngOnInit","titulo","EditarProducto","onFileSelected","event","file","target","files","reader","FileReader","onload","e","imagenPrevia","result","readAsDataURL","setValue","addProducto","invalid","formData","FormData","append","value","inputElement","document","querySelector","console","log","name","size","type","updateProducto","subscribe","navigate","error","createProducto","dataProducto","data","patchValue","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\JULIAN\\Desktop\\Super market\\Super market\\front-end\\src\\app\\componentes\\agg-edit-productos\\agg-edit-productos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Producto } from 'src/app/interfaces/producto';\nimport { ProductoService } from 'src/app/servicio/producto.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-agg-edit-productos',\n  templateUrl: './agg-edit-productos.component.html',\n  styleUrls: ['./agg-edit-productos.component.scss'],\n})\nexport class AggEditProductosComponent implements OnInit {\n  form: FormGroup;\n  id: number;\n  titulo: string = 'Agregar';\n  imagenPrevia: string | ArrayBuffer | null = null;\n\n  constructor(\n    private fm: FormBuilder,\n    private _productoServicio: ProductoService,\n    private router: Router,\n    private aRouter: ActivatedRoute\n  ) {\n    // Validaciones\n    this.form = this.fm.group({\n      nombre: ['', Validators.required],\n      descripcion: ['', Validators.required],\n      precio: ['', Validators.required],\n      stock: ['', Validators.required],\n      imagen: [null],\n    });\n\n    this.id = Number(this.aRouter.snapshot.paramMap.get('id'));\n  }\n\n  ngOnInit(): void {\n    if (this.id !== 0) {\n      this.titulo = 'Editar';\n      this.EditarProducto(this.id);\n    }\n  }\n\n  \n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.imagenPrevia = e.target.result;\n      };\n      reader.readAsDataURL(file);\n\n      this.form.get('imagen')?.setValue(file);\n    }\n  }\n\n  addProducto() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('nombre', this.form.get('nombre')?.value);\n    formData.append('descripcion', this.form.get('descripcion')?.value);\n    formData.append('precio', this.form.get('precio')?.value);\n    formData.append('stock', this.form.get('stock')?.value);\n\n    // Capturar el archivo de la imagen correctamente\n    const inputElement = document.querySelector('input[type=\"file\"]') as HTMLInputElement;\n    const file = inputElement?.files?.[0]; // Accede al archivox\n\n    if (file) {\n      console.log('Nombre del archivo:', file.name);\n      console.log('Tamaño del archivo:', file.size);\n      console.log('Tipo de archivo:', file.type);\n      formData.append('imagen', file);  // Añade el archivo al FormData\n    } else {\n      console.log(\"No se seleccionó ninguna imagen.\");\n    }\n\n    // // Mostrar los datos en la consola\n    // formData.forEach((value, key) => {\n    //   console.log(`${key}:`, value);\n    // });\n\n    if (this.id !== 0) {\n      this._productoServicio.updateProducto(this.id, formData).subscribe(() => {\n        console.log('Producto fue actualizado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al actualizar producto', error);\n      });\n    } else {\n      this._productoServicio.createProducto(formData).subscribe(() => {\n        console.log('Producto agregado con éxito');\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error al agregar producto', error);\n      });\n    }\n  }\n\n  // Editar Producto\n  EditarProducto(id: number) {\n    this._productoServicio.dataProducto(id).subscribe((data: Producto) => {\n      this.form.patchValue({\n        nombre: data.nombre,\n        descripcion: data.descripcion,\n        precio: data.precio,\n        stock: data.stock,\n        imagen: data.imagen// Limpiar el campo de imagen\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}